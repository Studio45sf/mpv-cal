#!/usr/bin/env bash

TERM="${TERM-'xterm'}"; export TERM
gray="$(tput setaf 8 || echo "")"
reset="$(tput sgr0 || echo "")"
PS4="${gray-}"'+(${BASH_SOURCE[0]}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'"${reset-}"
set -euxo pipefail


# try to make sure there is a tmux conf
if ! [ -e "$HOME/.tmux.conf" ]
then
    cat > "$HOME/.tmux.conf" <<EOF
# set prefix
set-option -g prefix C-b

set -g status on

# set window split
bind-key v split-window -h
bind-key b split-window

# pane resize
bind-key j resize-pane -D 5
bind-key k resize-pane -U 5
bind-key h resize-pane -L 5
bind-key l resize-pane -R 5

# reset copy mode
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle  # Begin selection in copy mode.

# remove prompt from kills
#unbind x
bind-key x kill-pane
#unbind &
bind-key & kill-window

set -s exit-empty off

# Enable mouse mode (tmux 2.1 and above)
setw -g mode-keys vi
#setw -g mode-mouse on
setw -g monitor-activity on
set -g mouse on
# No delay for escape key press
set -sg escape-time 0

set -g status-keys vi
set -g history-limit 100000

# Automatically set window title
set-window-option -g automatic-rename off
set-option -g set-titles on

set-option -g set-clipboard on

# color
set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"
set -g default-shell /bin/bash

# if run as "tmux attach", create a session if one does not already exist
new-session -n \$HOST

# change status bar color
set -g window-status-current-style bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-bg black
set -g status-fg white
set -g window-status-current-style bg=colour240
set -g window-status-current-style fg=white

set -g pane-active-border-style bg=default
set -g pane-active-border-style fg=colour220

bind , command-prompt -p 'Save history to:' -I '~/tmux.history' 'capture-pane -S -32768 ; mkdir -p ~/tmp ; save-buffer %1 ; delete-buffer'
bind , command-prompt -p 'Save history to:' -I '~/tmux.history' 'capture-pane -S -32768 ; mkdir -p ~/tmp ; save-buffer %1 ; delete-buffer'

bind * command-prompt -p 'mkdir -p ~/tmp ; Search pattern:' -I '*' 'capture-pane %1 ; save-buffer ~/tmp/tmux_grep ; delete-buffer ; grep %1 ~/tmp/tmux_grep | xclip'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-open'

set -g @open 'o'

bind , command-prompt -p 'Save history to:' -I '~/tmux.history' 'capture-pane -S -32768 ; mkdir -p ~/tmp ; save-buffer %1 ; delete-buffer'
bind , command-prompt -p 'Save history to:' -I '~/tmux.history' 'capture-pane -S -32768 ; mkdir -p ~/tmp ; save-buffer %1 ; delete-buffer'

bind * command-prompt -p 'mkdir -p ~/tmp ; Search pattern:' -I '*' 'capture-pane %1 ; save-buffer ~/tmp/tmux_grep ; delete-buffer ; grep %1 ~/tmp/tmux_grep | xclip'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "\$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "\$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "\$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "\$is_vim" "send-keys C-l" "select-pane -R"

## copy and yank
set -g @shell_mode 'vi'

set-option -g set-clipboard on

 # Vim style
bind-key p run "DISPLAY=:0 xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
EOF
fi

mkdir -p "$HOME/.tmux/plugins"

if [ -d ~/.tmux/plugins/tpm ]
then
    rm -rf ~/.tmux/plugins/tpm
fi

git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"
export TMUX_PLUGIN_MANAGER_PATH

# start a server but don't attach to it
tmux start-server

# create a new session but don't attach to it either
install_script=~/.tmux/plugins/tpm/scripts/install_plugins.sh
tmux new-session -d source ~/.tmux.conf

if ! "$install_script"
then
    # TODO: apply patch here
    TMUX_PLUGIN_MANAGER_PATH="$TMUX_PLUGIN_MANAGER_PATH" "$install_script"
fi
